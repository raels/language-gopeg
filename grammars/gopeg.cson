name: 'gopeg'
scopeName: 'source.gopeg'
fileTypes: [
	"gopeg"
	"peg"
]
'foldingStartMarker': "\\{\\s*$"
'foldingStopMarker': "^\\s*\\}"
'patterns': [
	{
		"include": "#comment"
	}
	{
		"include": "#label"
	}
	{
		"include": "#defRule"
	}
	{
		"include": "#rule"
	}
	{
		"include": "#literal"
	}
	{
		"include": "#charclass"
	}
	{
		"include": "#operators"
	}
	{
		"include": "#inlinego"
	}
]
repository:
	comment:
		patterns: [
			{
				"begin":"/\\*"
				"end": "\\*/"
				"name" : "comment.block.gopeg"
			}
			{
				"match": "//.*$\\n?"
				"name" : "comment.line.double-slash.gopeg"
			}
			{
				"match": "#.*$\\n?"
				"name" : "comment.line.hash.gopeg"
			}
		]
	label:
		match: "(\\w+)\\s*(?=:)"
		captures:
			"1":
				name: "entity.other.attribute-name.attribute.gopeg"
	token:
		patterns: [
			{
				"begin": "<"
				"end": ">"
				"name": "string.token.gopeg"
				"patterns": [
					{
						"match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)"
						"name": "constant.character.escape.gopeg"
					}
					{
						"match": "[^\"]*[^\\n\\r\"\\\\]$"
						"name": "invalid.illegal.string.gopeg"
					}
				]
			}
		]
	rule:
		match: "[a-zA-Z_][a-zA-Z_0-9]*"
		name: "entity.name.function.gopeg"
	literal:
		patterns: [
			{
				"begin": "\""
				"end": "\""
				"name": "string.quoted.double.gopeg"
				"patterns": [
					{
						"match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)"
						"name": "constant.character.escape.gopeg"
					}
					{
						"match": "[^\"]*[^\\n\\r\"\\\\]$"
						"name": "invalid.illegal.string.gopeg"
					}
				]
			}
			{
				"begin": "'"
				"end": "'"
				"name": "string.quoted.single.gopeg"
				"patterns": [
					{
						"match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
						"name": "constant.character.escape.gopeg"
					}
					{
						"match": "[^']*[^\\n\\r'\\\\]$"
						"name": "invalid.illegal.string.gopeg"
					}
				]
			}
		]
	charclass:
		begin: "\\["
		end: "\\]"
		name: "declaration.keyword.gopeg"
	defRule:
		match: "(\\w+)\\s*((?=<-)|(?=←))"
		captures:
			"1":
				name: "entity.name.function.gopeg"
	operators:
		match: "[*?/.$!=+&]"
		name: "keyword.operator.gopeg"
	inlinego:
		begin: "{"
		end: "}"
		name: "source.go.embedded.gopeg"
		patterns: [
			{
				"include": "source.go"
			}
		]
