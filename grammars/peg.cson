'fileTypes': [
	"gopeg"
	"peg"
]
'name': 'PEG/GOPEG File'
'foldingStartMarker': "\\{\\s*$"
'foldingStopMarker': "^\\s*\\}"
'patterns': [
	{
		"include": "#comment"
	}
	{
		"include": "#label"
	}
	{
		"include": "#defRule"
	}
	{
		"include": "#rule"
	}
	{
		"include": "#literal"
	}
	{
		"include": "#charclass"
	}
	{
		"include": "#operators"
	}
	{
		"include": "#inlinego"
	}
]
repository:
	comment:
		patterns: [
			{
				"begin":"/\\*"
				"end": "\\*/"
				"name" : "comment.block.peggo"
			}
			{
				"match": "//.*$\\n?"
				"name" : "comment.line.double-slash.peggo"
			}
			{
				"match": "#.*$\\n?"
				"name" : "comment.line.hash.peggo"
			}
		]
	label:
		match: "(\\w+)\\s*(?=:)"
		captures:
			"1":
				name: "entity.other.attribute-name.attribute.peggo"
	rule:
		match: "[a-zA-Z_][a-zA-Z_0-9]*"
		name: "entity.name.function.peggo"
	literal:
		patterns: [
			{
				"begin": "\""
				"end": "\""
				"name": "string.quoted.double.peggo"
				"patterns": [
					{
						"match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)"
						"name": "constant.character.escape.peggo"
					}
					{
						"match": "[^\"]*[^\\n\\r\"\\\\]$"
						"name": "invalid.illegal.string.peggo"
					}
				]
			}
			{
				"begin": "'"
				"end": "'"
				"name": "string.quoted.single.peggo"
				"patterns": [
					{
						"match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
						"name": "constant.character.escape.peggo"
					}
					{
						"match": "[^\"]*[^\\n\\r\"\\\\]$"
						"name": "invalid.illegal.string.peggo"
					}
				]
			}
		]
	charclass:
		begin: "\\["
		end: "\\]"
		name: "declaration.keyword.peggo"
	defRule:
		match: "(\\w+)\\s*(?=\\=)"
		captures:
			"1":
				name: "entity.name.function.peggo"
	operators:
		match: "[*?/.$!=+&]"
		name: "keyword.operator.peggo"
	inlinego:
		begin: "{"
		end: "}"
		name: "source.go.embedded.peggo"
		patterns: [
			{
				"include": "source.go"
			}
		]
'scopeName': 'source.peg'
